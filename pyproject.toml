[tool.poetry]
name = 'sphinxclasstocr'
description ='Group Python Class items logically in documentation using Sphinx.'
version = "0.0.2"
authors = ['Mark Sevelj <mark.sevelj@dunwright.com.au>']
maintainers = ['Mark Sevelj <mark.sevelj@dunwright.com.au>']
license = 'MIT'
readme = 'README.rst'
homepage  = 'https://github.com/imAsparky/sphinx-class-tocr'
documentation = 'https://sphinxclasstocr.readthedocs.io/en/latest/'
keywords = ['sphinx tools',
            'sphinx TOC',
            'documentation tools',
]
classifiers = [
    'Development Status :: 2 - Pre-Alpha',
    'Framework :: Sphinx :: Extension',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3',
    'Topic :: Documentation :: Sphinx',
]

include = [
  '{{cookiecutter.project_slug}}/**/*',
  'cookiecutter.json',
]

[tool.poetry.dependencies]
python = '>=3.6.2,<4.0'
furo = '^2021.8.17-beta.43'
myst-parser = '^0.15.1'
Sphinx = '^4.1.2'
sphinx-copybutton = '^0.4.0'






[tool.poetry.dev-dependencies]
black = '^21.7b0'
cookiecutter = '^1.7.3'
pre-commit = '^2.14.0'
pytest = '^6.2.4'
pytest-cookies = '^0.6.1'
pytest-cov = '^2.12.1'
Sphinx = '^4.1.2'
tox = '^3.24.3'
twine = '^3.4.2'
watchdog = '^2.1.5'
python-semantic-release = "^7.19.1"
tox-gh-actions = "^2.6.0"


[tool.poetry.scripts]
poetry = 'poetry.console:run'

[tool.pytest.ini_options]
testpaths = 'tests/'

[tool.semantic_release]
version_toml = 'pyproject.toml:tool.poetry.version'
branch = 'main'
major_on_zero = 'false'
patch_without_tag = 'true'
version_pattern = 'README.rst:VERSION (\\d+\\.\\d+\\.\\d+)'
patch_emoji = ':ambulance:'
minor_emoji = ':chart_with_upwards_trend:'
major_emoji = ':boom:'
build_command = 'poetry build'
commit_message = 'docs(CHANGELOG): update release notes:{version}'


[tool.black]
line-length = 79
include = '\.pyi?$'
exclude = '''
/(
    buck-out
  | _build
  | build
  | dist
  | \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
)/
'''

[build-system]
requires = ['poetry-core>=1.0.0']
build-backend = 'poetry.core.masonry.api'
